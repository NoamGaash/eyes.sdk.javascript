name: JS Build
description: Build JS package
inputs:
  working-directory:
    description: the path to the directory from repository root
    type: string
    required: true
  build-type:
    description: type of the build script
    type: string
  shell:
    description: shell to use
    type: string
    default: bash

runs:
  using: composite
  steps:
    - name: Install global tools
      working-directory: ${{inputs.working-directory}}
      shell: ${{inputs.shell}}
      run: |
        if [ -f "/etc/alpine-release" ]; then apk add --no-cache curl jq; fi
    - name: Install dependencies
      working-directory: ${{inputs.working-directory}}
      shell: ${{inputs.shell}}
      run: |
        yarn workspaces focus $(jq -r .name ./package.json) root
    - name: Setting up build environment
      working-directory: ${{inputs.working-directory}}
      shell: ${{inputs.shell}}
      run: |
        if [ -e .env ]; then cat .env >> $GITHUB_ENV; fi
    - name: Lint
      working-directory: ${{inputs.working-directory}}
      shell: ${{inputs.shell}}
      run: |
        if [  "$(jq -r .scripts.lint ./package.json)" != "null"  ]; then yarn run lint; fi
    - name: Build
      working-directory: ${{inputs.working-directory}}
      shell: ${{inputs.shell}}
      run: |
        yarn workspaces foreach --topological-dev --recursive --parallel --from $(jq -r .name ./package.json) run build
        if [ ! -z "${{inputs.build-type}}" ]; then yarn run build:${{inputs.build-type}}; fi
