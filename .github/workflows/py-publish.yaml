name: Publish python package

on:
  workflow_dispatch:
    inputs:
      package:
        description: package name
        type: choice
        options: [core_universal, eyes_common, eyes_images, eyes_selenium, eyes_playwright, eyes_robotframework]
        required: true
      version:
        description: version increment type
        type: choice
        options: [patch, minor, major, post]
        required: true

jobs:
  make_release_branch:
    runs-on: ubuntu-latest
    outputs:
      release_branch: ${{steps.create_release_branch.outputs.release_branch}}
      release_version: ${{steps.create_release_branch.outputs.release_version}}
    steps:
      - uses: actions/checkout@v3
      - id: create_release_branch
        run: |
          pip install bump2version
          PACKAGE=${{github.event.inputs.package}}
          eval $(cd $PACKAGE && bumpversion ${{github.event.inputs.version}} --list | grep new_version=)
          RELEASE_BRANCH=release-python-$PACKAGE-$new_version
          git checkout -b $RELEASE_BRANCH
          git push -u origin $RELEASE_BRANCH
          echo "release_branch=$RELEASE_BRANCH" >> $GITHUB_OUTPUT
          echo "release_version=$new_version" >> $GITHUB_OUTPUT
        shell: bash
        working-directory: python
        env:
          GIT_AUTHOR_NAME: ${{github.actor}}
          GIT_COMMITTER_NAME: ${{github.actor}}
          EMAIL: github-actions@github.com

  test:
    needs: [make_release_branch]
    uses: applitools/eyes.sdk.javascript1/.github/workflows/py-tests.yaml@master
    secrets: inherit
    with:
      ref: ${{needs.make_release_branch.outputs.release_branch}}
      releasing_package: ${{ github.event.inputs.package }}

  upload_to_pypi_merge_and_tag:
    needs: [make_release_branch, test]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{needs.make_release_branch.outputs.release_branch}}
      - uses: actions/download-artifact@v3
        with:
          name: packages
      - run: |
          PACKAGE=${{github.event.inputs.package}}
          PACKAGE_VERSION=${{needs.make_release_branch.outputs.release_version}}
          RELEASE_BRANCH=${{needs.make_release_branch.outputs.release_branch}}
          RELEASE_TAG="@applitools/python/$PACKAGE@$PACKAGE_VERSION"

          make publish_$PACKAGE -e SDK_VERSION=$PACKAGE_VERSION
          git tag -am "$PACKAGE v$PACKAGE_VERSION" "$RELEASE_TAG" $RELEASE_BRANCH
          git push origin "$RELEASE_TAG"
          git checkout ${{github.ref_name}}
          git pull
          git merge $RELEASE_BRANCH --commit --no-edit
          git push origin
          git push origin --delete $RELEASE_BRANCH
        shell: bash
        working-directory: python
        env:
          GIT_AUTHOR_NAME: ${{github.actor}}
          GIT_COMMITTER_NAME: ${{github.actor}}
          EMAIL: github-actions@github.com
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
